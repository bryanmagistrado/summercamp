<?php

/**
 * Implements hook_block_info().
 */
function summercamp_block_info() {
  $blocks = array();

  // Set this block as 'Featured Contents' in the block configuration page,
  // enable it (status = 1), and assign it to the sidebar_second region
  // (for Bartik theme).
  // Use t() function for translatable strings in the code
  // to conform to the best practice of Drupal supporting translations.
  $blocks['summercamp_featured_block'] = array(
    'info' => t('Featured Contents'),
    'status' => 1,
    'region' => 'sidebar_second',
  );

  $blocks['summercamp_panoramio_function'] = array(
    'info' => t('Panoramio Theme Function Block'),
    'status' => 1,
    'region' => 'sidebar_second',
  );

  $blocks['summercamp_panoramio_template'] = array(
    'info' => t('Panoramio Template File Block'),
    'status' => 1,
    'region' => 'sidebar_second',
  );

  $blocks['summercamp_latest_gists'] = array(
    'info' => t('Latest Gists Block'),
    'status' => 1,
    'region' => 'sidebar_second',
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function summercamp_block_view($block_name = '') {
  $block = array();

  switch ($block_name) {
    // Set the title of this block ('subject') when rendered in the page and
    // its block contents (['content']['#markup']).
    case 'summercamp_featured_block':
      $block['subject'] = t('Custom JSON Data with Local & External Scripts');

      // Build the main markups for the block: Paragraph and Canvas tags.
      // Canvas is an HTML5 tag/element.
      $current_content = variable_get('summercamp_featured_block_content', t('Hello World!'));
      $canvas_content = '<canvas id="chart-canvas" width="168" height="168">';

      // Combine their markups.
      $markup = $current_content . $canvas_content;

      // '#markup' indicate the contents of the block.
      $block['content']['#markup']  = $markup;

      // '#attached' could inject JS scripts into render array in four contexts:
      // As inline scripts, as Drupal.settings object, as a local/internal file,
      // or as sourced from external sites.
      //
      // Prepare some info to be passed to Drupal.settings.
      $chart_type = array(
        'type' => variable_get('summercamp_chart_type', t('Pie')),
      );

      // Pass the chart type info as Drupal.settings.chart.type.
      $block['content']['#attached']['js'][] = array(
        'data' => array('chart' => $chart_type),
        'type' => 'setting',
      );

      // Fetch an external JS script (Chart JS).
      $block['content']['#attached']['js'][] = array(
        'data' => 'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js',
        'type' => 'external',
      );

      // Fetch an internal/local JS script used for rendering the chart
      // in the rendered block markup (which contains the Canvas element).
      $block['content']['#attached']['js'][] = array(
        'data' => drupal_get_path('module', 'summercamp') . '/js/summercamp_chart_driver.js',
        'type' => 'file',
      );

      break;

    case 'summercamp_panoramio_function':
      $block['subject'] = t('Back-End JSON with Theme Function');

      // Fetch JSON data from Panoramio API.
      $photo_attributes = _summercamp_fetch_panoramio_data();

      // Build the block markup using a theme function.
      $block['content']['#markup'] = theme('summercamp_panoramio_theme_function', $photo_attributes);

      break;

    case 'summercamp_panoramio_template':
      $block['subject'] = t('Back-End JSON with Template File');

      // Fetch JSON data from Panoramio API.
      $photo_attributes = _summercamp_fetch_panoramio_data();

      // Build the block markup using a template file.
      // Note that we need to append the render array as a new array element
      // to simulate a new array key because a key is needed for render array.
      $block['content'][] = array (
        '#theme' => 'summercamp_panoramio_template_file',
        '#title' => $photo_attributes['title'],
        '#src' => $photo_attributes['src'],
      );

      break;

    case 'summercamp_latest_gists':
      $block['subject'] = t('Front-End JSON with Render API');

      // Build the block markup using the API and
      // the built-in 'links' theme function.
      // We need to append the render array as a new array element
      // to simulate a new array key because a key is needed for render array.
      // Note that the Links' 'title' and 'href' will be just overriden by the
      // 'summercamp_panoramio_driver' JS file.
      // But, we need to set temporary values because they are needed info
      // by the 'links' theme function.
      $block['content'][] = array(
        '#theme' => 'links',
        '#links' => array(
          array(
            'title' => t('Gist 1'),
            'href' => '#',
          ),
          array(
            'title' => t('Gist 2'),
            'href' => '#',
          ),
          array(
            'title' => t('Gist 3'),
            'href' => '#',
          ),
        ),
        '#attributes' => array('class' => 'latest-gist'),
        // Let's insert a block sub-title.
        // '#prefix' inserts a markup before the 'links' markup.
        '#prefix' => '<h3>' . t('Latest Gists') . '</h3>',
      );

      // Fetch an internal/local JS script used for adjusting the gists links.
      $block['content']['#attached']['js'][] = array(
        'data' => drupal_get_path('module', 'summercamp') . '/js/summercamp_panoramio_driver.js',
        'type' => 'file',
      );

      break;
  }

  return $block;
}


/**
 * Implements hook_block_configure().
 */
function summercamp_block_configure($block_name = '') {
  $form = array();

  if ($block_name == 'summercamp_featured_block') {
    $form['summercamp_featured_block_content'] = array(
      '#type' => 'textarea',
      '#title' => t('Summercamp Block Contents'),
      '#default_value' => variable_get('summercamp_featured_block_content', t('Hello World!')),
    );
  }

  return $form;
}


/**
 * Implements hook_block_save().
 */
function summercamp_block_save($block_name = '', $form_state = array()) {
  if ($block_name == 'summercamp_featured_block') {
    variable_set('summercamp_featured_block_content', $form_state['summercamp_featured_block_content']);
  }
}


/**
 * Implements hook_menu().
 */
function summercamp_menu() {
  $items = array();

  // Define a new menu: http://www.example.com/articles/json.
  // Set the function to be executed ('_summercamp_get_articles'),
  // the access permission for the URL ('access content'),
  // and convert the returned array/data of the function callback to JSON
  // ('drupal_json_output').
  $items['articles/json'] = array(
    'page callback' => '_summercamp_get_articles',
    'delivery callback' => 'drupal_json_output',
    'access arguments' => array('access content'),
  );

  // Set the parent menu item for the Chart settings sub-menu below.
  $items['admin/config/custom'] = array(
    'title' => t('Custom'),
    'access arguments' => array('access content'),
  );

  // Set the function to be executed ('_chart_admin_settings'),
  // the access permission for the URL ('access content'),
  // and convert the returned array/data of the function to a Drupal form
  // ('drupal_get_form').
  $items['admin/config/custom/chart'] = array(
    'title' => t('Chart Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_summercamp_chart_admin_settings'),
    'access arguments' => array('access content'),
  );

  return $items;
}


function _summercamp_chart_admin_settings($form, &$form_state) {
  $form = array();

  $form['summercamp_chart_type'] = array(
    '#type' => 'select',
    '#title' => t('Choose the Chart Type'),
    '#default_value' => variable_get('summercamp_chart_type', t('Pie')),
    '#options' => array(
      'Pie' => t('Pie'),
      'Doughnut' => t('Doughnut'),
    ),
  );

  $form['summercamp_chart_label'] = array(
    '#type' => 'checkbox',
    '#title' => t('Include the Labels'),
    '#default_value' => variable_get('summercamp_chart_label', 1),
  );

  $form['summercamp_chart_highlight_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Desired Highlight Color'),
    '#default_value' => variable_get('summercamp_chart_highlight_color', t('lightblue')),
  );

  // Drupal's system_settings_form' auto-triggers the variable_get()
  // and/or variable_set() for:
  // 'summercamp_chart_type'
  // 'summercamp_chart_label'
  // 'summercamp_chart_highlight_color'
  $form = system_settings_form($form);

  return $form;
}


function _summercamp_get_articles() {
  // Create a new EFQ object.
  $query = new EntityFieldQuery();

  // Select all article nodes.
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'article');

  $result = $query->execute();

  // If there's at least one result.
  if (isset($result['node'])) {
    // Retrieve the list of node ids.
    $nids = array_keys($result['node']);

    // Load the articles simultaneously (minimizes db requests).
    $articles = entity_load('node', $nids);
  }

  // Pass the data to JSON converter.
  return array('data' => $articles);
}


/**
 * Implements hook_js_alter().
 */
function summercamp_js_alter(&$js_files) {
  // dpm($js_files);
}


/**
 * Implements hook_theme().
 */
function summercamp_theme() {
  // Registers the theming mechanisms and the extra info/variables they need.
  return array(
    // Build the block using the markup in the returned string of a function.
    'summercamp_panoramio_theme_function' => array(
      'variables' => array(
        'title' => NULL,
        'src' => NULL,
      ),
    ),

    // Build the block using the markup in the contents of a template file.
    // Theming using template file need extra information which is
    // the file name of the template file to be searched for
    // in the current/module directory.
    // In the example below, the template file is:
    // summercamp_panoramio.tpl.php
    'summercamp_panoramio_template_file' => array(
      'template' => 'summercamp_panoramio',
      'variables' => array(
        'title' => NULL,
        'src' => NULL,
      ),
    ),
  );
}


/**
 * Theme function.
 *
 * $photo_attributes contains the passed info when invoking the theme function:
 *  theme('summercamp_panoramio_theme_function', $photo_attributes)
 */
function theme_summercamp_panoramio_theme_function($photo_attributes) {
  $title = $photo_attributes['title'];
  $img_src = $photo_attributes['src'];

  $title_markup = '<p>' .  $title . '</p>';
  $img_markup = '<img src="' . $img_src . '" width="168px" />';

  // Return the combined markups of title and the photo itself.
  return $title_markup . $img_markup;
}


/**
 * Helper function for fetching data from Panoramio API.
 */
function _summercamp_fetch_panoramio_data() {
  // Pull the Top 1 most popular photo in the vicinity of the Philippines.
  // API Details: http://www.panoramio.com/api/data/api.html
  $target_image = 'http://www.panoramio.com/map/get_panoramas.php?set=full&from=0&to=1&minx=115&miny=0&maxx=130&maxy=20&size=small';

  $request = drupal_http_request($target_image);

  $data = drupal_json_decode($request->data);

  $photo = $data['photos'][0];
  $title = $photo['photo_title'];
  $file_url = $photo['photo_file_url'];

  $photo_attributes = array(
    'title' => $title,
    'src' => $file_url,
  );

  return $photo_attributes;
}
